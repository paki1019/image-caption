{"version":3,"sources":["components/ImageSection.js","components/EmptyImage.js","components/CaptionSection.js","App.js","index.js"],"names":["Img","styled","img","Div","div","ImageSection","imageUrl","setHeight","ref","useRef","useEffect","console","log","current","height","src","alt","EmptyImageSection","CaptionSection","caption","color","style","useMemo","top","DivApp","App","useState","setImageUrl","imageName","setImageName","setCaption","setColor","onClickHandler","useCallback","e","preventDefault","html2canvas","document","querySelector","then","canvas","link","createElement","download","href","toDataURL","click","onClickHandler2","onChangeHandler","reader","FileReader","fileName","target","files","name","split","onloadend","result","readAsDataURL","onChangeHandler2","value","className","EmptyImage","id","maxWidth","maxHeight","type","accept","onChange","onClick","ReactDOM","render","StrictMode","getElementById"],"mappings":"4cAGA,IAeMA,EAAMC,IAAOC,IAAV,KAKHC,EAAMF,IAAOG,IAAV,KAIMC,EAxBM,SAAC,GAA6B,IAA3BC,EAA0B,EAA1BA,SAAUC,EAAgB,EAAhBA,UAC1BC,EAAMC,mBAOZ,OALAC,qBAAU,WACNC,QAAQC,IAAIJ,EAAIK,QAAQC,QAC1BP,EAAUC,EAAIK,QAAQC,UACtB,CAACR,EAAUC,IAGX,kBAACJ,EAAD,KACE,kBAACH,EAAD,CAAKe,IAAKT,EAAUU,IAAI,qBAAMR,IAAKA,M,oLCPzC,IAIML,EAAMF,IAAOG,IAAV,KAQMa,EAZW,WACxB,OAAO,kBAAC,EAAD,yC,2GCJT,IAUMd,EAAMF,IAAOG,IAAV,KAIMc,EAdQ,SAAC,GAAgC,IAA9BC,EAA6B,EAA7BA,QAASL,EAAoB,EAApBA,OAAQM,EAAY,EAAZA,MACnCC,EAAQC,mBAAQ,iBAAO,CAAEC,IAAc,EAATT,EAAa,KAAM,CAACA,IAExD,OACE,kBAAC,EAAD,CAAKO,MAAOA,GACV,yBAAKA,MAAO,CAACD,UAASD,K,8FCD5B,IAsEMK,EAASvB,IAAOG,IAAV,KAIGqB,EA1EH,WAAO,IAAD,EACgBC,qBADhB,mBACTpB,EADS,KACCqB,EADD,OAEkBD,qBAFlB,mBAETE,EAFS,KAEEC,EAFF,OAGcH,mBAAS,IAHvB,mBAGTP,EAHS,KAGAW,EAHA,OAIYJ,qBAJZ,mBAITZ,EAJS,KAIDP,EAJC,OAKUmB,mBAAS,SALnB,mBAKTN,EALS,KAKFW,EALE,KAOVC,EAAiBC,uBACrB,SAACC,GACCA,EAAEC,iBACFC,IAAYC,SAASC,cAAc,aAAaC,MAAK,SAACC,GACpD,IAAIC,EAAOJ,SAASK,cAAc,KAClCD,EAAKE,SAAWf,EAChBa,EAAKG,KAAOJ,EAAOK,YACnBJ,EAAKK,aAGT,CAAClB,IAGGmB,EAAkBd,uBACtB,SAACC,GACCA,EAAEC,iBAEAJ,EADY,UAAVX,EACO,QAEA,WAGb,CAACA,IAGG4B,EAAkBf,uBAAY,SAACC,GAAO,IAAD,IACnCe,EAAS,IAAIC,WACbC,GAAW,UAAAjB,EAAEkB,OAAOC,MAAM,UAAf,mBAAmBC,YAAnB,eAAyBC,MAAM,KAAK,IAAK,WAE1D1B,EAAasB,GAEbF,EAAOO,UAAY,SAACtB,GAAD,OAAOP,EAAYO,EAAEkB,OAAOK,SAC/CR,EAAOS,cAAcxB,EAAEkB,OAAOC,MAAM,MACnC,IAEGM,EAAmB1B,uBAAY,SAACC,GACpCJ,EAAWI,EAAEkB,OAAOQ,SACnB,IAEH,OACE,kBAACpC,EAAD,CAAQqC,UAAU,OAChB,yFACEvD,GAAY,kBAACwD,EAAD,MACd,yBAAKC,GAAG,UAAU1C,MAAO,CAAE2C,SAAU,SAAUC,UAAW,UACvD3D,GAAY,kBAAC,EAAD,CAAcA,SAAUA,EAAUC,UAAWA,IACzDD,GAAYa,GACX,kBAAC,EAAD,CAAgBA,QAASA,EAASL,OAAQA,EAAQM,MAAOA,KAG7D,6BACE,2BAAO8C,KAAK,OAAOC,OAAO,UAAUC,SAAUpB,KAEhD,6BACE,8BAAUoB,SAAUT,IACpB,4BAAQU,QAAStB,GAAkB3B,IAErC,6BACE,4BAAQiD,QAASrC,GAAjB,+BClERsC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFnC,SAASoC,eAAe,W","file":"static/js/main.6a0dceb2.chunk.js","sourcesContent":["import React, { useRef, useEffect } from \"react\";\nimport styled from \"styled-components\";\n\nconst ImageSection = ({ imageUrl, setHeight }) => {\n  const ref = useRef();\n\n  useEffect(() => {\n      console.log(ref.current.height)\n    setHeight(ref.current.height)\n  },[imageUrl, setHeight])\n\n  return (\n    <Div>\n      <Img src={imageUrl} alt=\"이미지\" ref={ref}/>\n    </Div>\n  );\n};\n\nconst Img = styled.img`\n  max-width: 512px;\n  max-height: 512px;\n`;\n\nconst Div = styled.div`\n  top: 0px;\n`;\n\nexport default ImageSection;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\n/**\n * 이미지 영역 공백\n */\nconst EmptyImageSection = () => {\n  return <Div>이미지 영역</Div>;\n};\n\nconst Div = styled.div`\n  width: 200px;\n  height: 200px;\n  border: 1px solid gray;\n  text-align: center;\n  margin-bottom: 10px;\n`;\n\nexport default EmptyImageSection;\n","import React, { useMemo } from \"react\";\nimport styled from \"styled-components\";\n\nconst CaptionSection = ({ caption, height, color }) => {\n  const style = useMemo(() => ({ top: height * 4 / 5 }), [height]);\n\n  return (\n    <Div style={style}>\n      <pre style={{color}}>{caption}</pre>\n    </Div>\n  );\n};\n\nconst Div = styled.div`\n  position: absolute;\n  top: 0px;\n`;\nexport default CaptionSection;\n","import React, { useCallback, useState } from \"react\";\nimport html2canvas from \"html2canvas\";\nimport ImageSection from \"./components/ImageSection\";\nimport styled from \"styled-components\";\nimport EmptyImageSection from \"./components/EmptyImage\";\nimport CaptionSection from \"./components/CaptionSection\";\n\nconst App = () => {\n  const [imageUrl, setImageUrl] = useState();\n  const [imageName, setImageName] = useState();\n  const [caption, setCaption] = useState(\"\");\n  const [height, setHeight] = useState();\n  const [color, setColor] = useState(\"white\");\n\n  const onClickHandler = useCallback(\n    (e) => {\n      e.preventDefault();\n      html2canvas(document.querySelector(\"#capture\")).then((canvas) => {\n        var link = document.createElement(\"a\");\n        link.download = imageName;\n        link.href = canvas.toDataURL();\n        link.click();\n      });\n    },\n    [imageName]\n  );\n\n  const onClickHandler2 = useCallback(\n    (e) => {\n      e.preventDefault();\n      if (color === \"white\") {\n        setColor(\"black\");\n      } else {\n        setColor(\"white\");\n      }\n    },\n    [color]\n  );\n\n  const onChangeHandler = useCallback((e) => {\n    const reader = new FileReader();\n    const fileName = e.target.files[0]?.name?.split(\".\")[0] + \"_sub.jpg\";\n\n    setImageName(fileName);\n\n    reader.onloadend = (e) => setImageUrl(e.target.result);\n    reader.readAsDataURL(e.target.files[0]);\n  }, []);\n\n  const onChangeHandler2 = useCallback((e) => {\n    setCaption(e.target.value);\n  }, []);\n\n  return (\n    <DivApp className=\"App\">\n      <h2>★이미지 자막 추가★</h2>\n      {!imageUrl && <EmptyImageSection />}\n      <div id=\"capture\" style={{ maxWidth: \" 512px\", maxHeight: \"512px\" }}>\n        {imageUrl && <ImageSection imageUrl={imageUrl} setHeight={setHeight} />}\n        {imageUrl && caption && (\n          <CaptionSection caption={caption} height={height} color={color} />\n        )}\n      </div>\n      <div>\n        <input type=\"file\" accept=\"image/*\" onChange={onChangeHandler} />\n      </div>\n      <div>\n        <textarea onChange={onChangeHandler2} />\n        <button onClick={onClickHandler2}>{color}</button>\n      </div>\n      <div>\n        <button onClick={onClickHandler}>다운로드</button>\n      </div>\n    </DivApp>\n  );\n};\n\nconst DivApp = styled.div`\n  padding-left: 10px;\n`;\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}