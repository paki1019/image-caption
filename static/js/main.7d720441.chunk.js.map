{"version":3,"sources":["components/ImageSection.js","components/EmptyImage.js","components/CaptionSection.js","components/ButtonDownload.js","components/InputImageFile.js","App.js","index.js"],"names":["Img","styled","img","Div","div","ImageSection","imageUrl","setHeight","ref","useRef","useEffect","console","log","current","height","src","alt","EmptyImageSection","CaptionSection","caption","color","fontSize","style","useMemo","top","ButtonDownload","imageName","downloadCapture","useCallback","html2canvas","document","querySelector","then","canvas","link","createElement","download","href","toDataURL","click","onClickHandler","e","preventDefault","onClick","InputImageFile","setImageName","setImageUrl","onChangeHandler","reader","FileReader","fileName","target","files","name","split","onloadend","result","readAsDataURL","type","accept","onChange","DivApp","App","useState","setCaption","setColor","setFontSize","onClickHandler2","onChangeHandler2","value","className","EmptyImage","id","maxWidth","maxHeight","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.7d720441.chunk.js","sourcesContent":["import React, { useRef, useEffect } from \"react\";\nimport styled from \"styled-components\";\n\nconst ImageSection = ({ imageUrl, setHeight }) => {\n  const ref = useRef();\n\n  useEffect(() => {\n      console.log(ref.current.height)\n    setHeight(ref.current.height)\n  },[imageUrl, setHeight])\n\n  return (\n    <Div>\n      <Img src={imageUrl} alt=\"이미지\" ref={ref}/>\n    </Div>\n  );\n};\n\nconst Img = styled.img`\n  max-width: 512px;\n  max-height: 512px;\n`;\n\nconst Div = styled.div`\n  top: 0px;\n`;\n\nexport default ImageSection;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\n/**\n * 이미지 영역 공백\n */\nconst EmptyImageSection = () => {\n  return <Div>이미지 영역</Div>;\n};\n\nconst Div = styled.div`\n  width: 200px;\n  height: 200px;\n  border: 1px solid gray;\n  text-align: center;\n  margin-bottom: 10px;\n`;\n\nexport default EmptyImageSection;\n","import React, { useMemo } from \"react\";\nimport styled from \"styled-components\";\n\nconst CaptionSection = ({ caption, height, color, fontSize }) => {\n  const style = useMemo(() => ({ top: height * 4 / 5, fontSize: fontSize + \"px\" }), [fontSize, height]);\n\n  return (\n    <Div style={style}>\n      <pre style={{color}}>{caption}</pre>\n    </Div>\n  );\n};\n\nconst Div = styled.div`\n  position: absolute;\n  top: 0px;\n`;\nexport default CaptionSection;\n","import React, { useCallback } from \"react\";\nimport html2canvas from \"html2canvas\";\n\n/**\n * 결과 이미지 다운로드\n */\nconst ButtonDownload = ({ imageUrl, imageName }) => {\n  const downloadCapture = useCallback(() => {\n    html2canvas(document.querySelector(\"#capture\")).then((canvas) => {\n      var link = document.createElement(\"a\");\n      link.download = imageName;\n      link.href = canvas.toDataURL();\n      link.click();\n    });\n  }, [imageName]);\n\n  const onClickHandler = useCallback(\n    (e) => {\n      e.preventDefault();\n      if (!imageUrl) return;\n      downloadCapture();\n    },\n    [downloadCapture, imageUrl]\n  );\n\n  return <button onClick={onClickHandler}>다운로드</button>;\n};\nexport default ButtonDownload;\n","import React, { useCallback } from \"react\"\n\nconst InputImageFile = ({setImageName, setImageUrl}) => {\n\n    const onChangeHandler = useCallback((e) => {\n        const reader = new FileReader();\n        const fileName = e.target.files[0]?.name?.split(\".\")[0] + \"_sub.jpg\";\n    \n        setImageName(fileName);\n    \n        reader.onloadend = (e) => setImageUrl(e.target.result);\n        reader.readAsDataURL(e.target.files[0]);\n      }, [setImageName, setImageUrl]);\n\n    return (\n        <input type=\"file\" accept=\"image/*\" onChange={onChangeHandler} />\n    )\n}\n\nexport default InputImageFile;","import React, { useCallback, useState } from \"react\";\nimport ImageSection from \"./components/ImageSection\";\nimport styled from \"styled-components\";\nimport EmptyImageSection from \"./components/EmptyImage\";\nimport CaptionSection from \"./components/CaptionSection\";\nimport ButtonDownload from \"./components/ButtonDownload\";\nimport InputImageFile from \"./components/InputImageFile\";\n\nconst App = () => {\n  const [imageUrl, setImageUrl] = useState();\n  const [imageName, setImageName] = useState();\n  const [caption, setCaption] = useState(\"\");\n  const [height, setHeight] = useState();\n  const [color, setColor] = useState(\"white\");\n  const [fontSize, setFontSize] = useState(9);  \n\n  const onClickHandler2 = useCallback(\n    (e) => {\n      e.preventDefault();\n      if (color === \"white\") {\n        setColor(\"black\");\n      } else {\n        setColor(\"white\");\n      }\n    },\n    [color]\n  );\n\n  const onChangeHandler2 = useCallback((e) => {\n    setCaption(e.target.value);\n  }, []);\n\n  return (\n    <DivApp className=\"App\">\n      <h2>★이미지 자막 추가★</h2>\n      {!imageUrl && <EmptyImageSection />}\n      <div id=\"capture\" style={{ maxWidth: \" 512px\", maxHeight: \"512px\" }}>\n        {imageUrl && <ImageSection imageUrl={imageUrl} setHeight={setHeight} />}\n        {imageUrl && caption && (\n          <CaptionSection\n            caption={caption}\n            height={height}\n            color={color}\n            fontSize={fontSize}\n          />\n        )}\n      </div>\n      <div>\n        <InputImageFile setImageName={setImageName} setImageUrl={setImageUrl} />\n      </div>\n      <div>\n        <textarea onChange={onChangeHandler2} />\n        <br />\n        <button onClick={onClickHandler2}>{color}</button>\n        <br />\n        <input\n          value={fontSize}\n          onChange={(e) => {\n            e.preventDefault();\n            setFontSize(e.target.value);\n          }}\n        />\n      </div>\n      <div>\n        <ButtonDownload imageUrl={imageUrl} imageName={imageName} />\n      </div>\n    </DivApp>\n  );\n};\n\nconst DivApp = styled.div`\n  padding-left: 10px;\n`;\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}